{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAc5C,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAC7C,KAAK,CAAC,gBAAgB;QACpB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,kBAAkB;QACtB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,QAA0B;QACxC,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAA2B;QAC1C,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,QAA6B;QAC9C,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,sBAAsB;QAC1B,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,qBAAqB;QACzB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,SAAS;QACb,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAA4B;QAC5C,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  AddDeviceOptions,\n  AddDevicesOptions,\n  BackgroundBLEPlugin,\n  Device,\n  PermissionStatus,\n  RemoveDeviceOptions,\n  Result,\n  ScanMode,\n  SetScanModeOptions,\n} from './definitions';\n\nexport class BackgroundBLEWeb extends WebPlugin implements BackgroundBLEPlugin {\n  async checkPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async initialise(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getDevices(): Promise<Result<'devices', Device[]>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async addDevice(_options: AddDeviceOptions): Promise<Result<'devices', Device[]>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async addDevices(_options: AddDevicesOptions): Promise<Result<'devices', Device[]>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async removeDevice(_options: RemoveDeviceOptions): Promise<Result<'devices', Device[]>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async clearDevices(): Promise<Result<'devices', Device[]>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async startForegroundService(): Promise<Result<'result', string>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async stopForegroundService(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async isRunning(): Promise<Result<'running', boolean>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async setScanMode(_options: SetScanModeOptions): Promise<Result<'result', ScanMode>> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n"]}