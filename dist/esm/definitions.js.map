{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AA6HA;;GAEG;AACH,MAAM,CAAN,IAAY,QAqBX;AArBD,WAAY,QAAQ;IAClB;;;OAGG;IACH,0DAAkB,CAAA;IAClB;;;OAGG;IACH,iDAAa,CAAA;IACb;;;OAGG;IACH,+CAAY,CAAA;IACZ;;;OAGG;IACH,qDAAe,CAAA;AACjB,CAAC,EArBW,QAAQ,KAAR,QAAQ,QAqBnB","sourcesContent":["import type { PermissionState } from '@capacitor/core';\n\n/**\n * The permission state\n *\n * The permission state is a string that can be one of the following:\n * - 'granted': The permission is granted\n * - 'denied': The permission is denied\n * - 'prompt': The permission is prompt\n * - 'unavailable': The permission is unavailable\n *\n * @since 1.0.0\n */\nexport interface PermissionStatus {\n  bluetooth: PermissionState;\n  notifications: PermissionState;\n}\n\n/**\n * A device\n *\n * @since 1.0.0\n */\nexport interface Device {\n  /**\n   * The serial of the device\n   *\n   * @since 1.0.0\n   */\n  serial: string;\n  /**\n   * The display name of the device\n   *\n   * @since 1.0.0\n   */\n  name: string;\n  /**\n   * The RSSI of the device\n   *\n   * 0 = device is not in range\n   *\n   * @since 1.0.0\n   */\n  rssi: number;\n  /**\n   * The TX power of the device\n   *\n   * -127 = unknown TX power\n   *\n   * @since 1.0.0\n   */\n  txPower: number;\n  /**\n   * The last time the device was updated\n   *\n   * in milliseconds since epoch\n   *\n   * @since 1.0.0\n   */\n  lastUpdated: number;\n}\n\n/**\n * The options to add a device\n *\n * Only requires the serial and name of the device\n *\n * @since 1.0.0\n */\nexport interface AddDeviceOptions {\n  /**\n   * The serial of the device\n   *\n   * @since 1.0.0\n   */\n  serial: string;\n  /**\n   * The display name of the device\n   *\n   * @since 1.0.0\n   */\n  name: string;\n}\n\n/**\n * The options to add multiple devices\n *\n * @since 1.0.0\n */\nexport interface AddDevicesOptions {\n  /**\n   * The devices to add to the list of devices to scan for\n   *\n   * @since 1.0.0\n   */\n  devices: AddDeviceOptions[];\n}\n\n/**\n * The options to remove a device\n *\n * Only requires the serial of the device\n *\n * @since 1.0.0\n */\nexport interface RemoveDeviceOptions {\n  /**\n   * The serial of the device\n   *\n   * @since 1.0.0\n   */\n  serial: string;\n}\n\n/**\n * The result type is used to define the result of a function\n *\n * @default { result: string }\n *\n * @since 1.0.0\n */\nexport type Result<Key extends string = 'result', T = string> = {\n  [key in Key]: T;\n};\n\n/**\n * The scan mode, taken from the Android API\n */\nexport enum ScanMode {\n  /**\n   * A special Bluetooth LE scan mode.\n   * Applications using this scan mode will passively listen for other scan results without starting BLE scans themselves.\n   */\n  OPPORTUNISTIC = -1,\n  /**\n   * Perform Bluetooth LE scan in low power mode.\n   * This is the default scan mode as it consumes the least power.\n   */\n  LOW_POWER = 0,\n  /**\n   * Perform Bluetooth LE scan in balanced power mode.\n   * Scan results are returned at a rate that provides a good trade-off between scan frequency and power consumption.\n   */\n  BALANCED = 1,\n  /**\n   * Scan for Bluetooth LE devices using a high duty cycle.\n   * It's recommended to only use this mode when the application is running in the foreground.\n   */\n  LOW_LATENCY = 2,\n}\n\n/**\n * The options to set the scan mode\n */\nexport interface SetScanModeOptions {\n  /**\n   * The scan mode to set\n   *\n   * @see ScanMode\n   *\n   * @default LOW_POWER\n   *\n   * @since 1.0.0\n   */\n  mode: ScanMode;\n}\n\n/**\n * The debug mode options\n */\nexport interface DebugModeOptions {\n  /**\n   * The debug mode to set\n   *\n   * @default false\n   *\n   * @since 1.0.0\n   */\n  debug: boolean;\n}\n\n/**\n * The background BLE plugin\n */\nexport interface BackgroundBLEPlugin {\n  checkPermissions(): Promise<PermissionStatus>;\n  requestPermissions(): Promise<PermissionStatus>;\n  /**\n   * Initialise the background scanner\n   *\n   * @param options The options to initialise the background scanner\n   *\n   * @since 1.0.0\n   */\n  initialise(): Promise<void>;\n  /**\n   * Get the current list of devices\n   *\n   * @since 1.0.0\n   */\n  getDevices(): Promise<Result<'devices', Device[]>>;\n  /**\n   * Set the list of devices to scan for\n   *\n   * @param devices The devices to scan for\n   *\n   * @since 1.0.0\n   */\n  setDevices(options: AddDevicesOptions): Promise<Result<'devices', Device[]>>;\n  /**\n   * Clear the list of devices to scan for\n   *\n   * @since 1.0.0\n   */\n  clearDevices(): Promise<Result<'devices', Device[]>>;\n  /**\n   * Start the background scanner\n   *\n   * @since 1.0.0\n   */\n  startForegroundService(): Promise<Result<'result', string>>;\n  /**\n   * Stop the background scanner\n   *\n   * @since 1.0.0\n   */\n  stopForegroundService(): Promise<void>;\n  /**\n   * Is the background scanner running\n   *\n   * @since 1.0.0\n   */\n  isRunning(): Promise<Result<'running', boolean>>;\n  /**\n   * Set the scan mode\n   *\n   * The scan mode can be one of the following:\n   * - OPPORTUNISTIC: A special Bluetooth LE scan mode.\n   *                  Applications using this scan mode will passively listen for other scan results without starting BLE scans themselves.\n   * - LOW_POWER:     Perform Bluetooth LE scan in low power mode.\n   *                  This is the default scan mode as it consumes the least power.\n   * - BALANCED:      Perform Bluetooth LE scan in balanced power mode.\n   *                  Scan results are returned at a rate that provides a good trade-off between scan frequency and power consumption.\n   * - LOW_LATENCY:   Scan for Bluetooth LE devices using a high duty cycle.\n   *                  It's recommended to only use this mode when the application is running in the foreground.\n   *\n   * @param options The options to set the scan mode\n   *\n   * @since 1.0.0\n   */\n  setScanMode(options: SetScanModeOptions): Promise<Result<'result', ScanMode>>;\n  /**\n   * Set debug mode\n   */\n  setDebugMode(options: DebugModeOptions): Promise<Result<'debug', boolean>>;\n}\n"]}