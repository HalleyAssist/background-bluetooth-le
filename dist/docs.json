{
  "api": {
    "name": "BackgroundBLEPlugin",
    "slug": "backgroundbleplugin",
    "docs": "The background BLE plugin",
    "tags": [],
    "methods": [
      {
        "name": "checkPermissions",
        "signature": "() => Promise<PermissionStatus>",
        "parameters": [],
        "returns": "Promise<PermissionStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PermissionStatus"
        ],
        "slug": "checkpermissions"
      },
      {
        "name": "requestPermissions",
        "signature": "() => Promise<PermissionStatus>",
        "parameters": [],
        "returns": "Promise<PermissionStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PermissionStatus"
        ],
        "slug": "requestpermissions"
      },
      {
        "name": "initialise",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "param",
            "text": "options The options to initialise the background scanner"
          }
        ],
        "docs": "Initialise the background scanner",
        "complexTypes": [],
        "slug": "initialise"
      },
      {
        "name": "enable",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "returns",
            "text": "A promise that resolves when bluetooth is enabled"
          }
        ],
        "docs": "Enable bluetooth",
        "complexTypes": [],
        "slug": "enable"
      },
      {
        "name": "getDevices",
        "signature": "() => Promise<Devices>",
        "parameters": [],
        "returns": "Promise<Devices>",
        "tags": [],
        "docs": "Get the current list of devices",
        "complexTypes": [
          "Devices"
        ],
        "slug": "getdevices"
      },
      {
        "name": "setDevices",
        "signature": "(options: AddDevicesOptions) => Promise<Devices>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "AddDevicesOptions"
          }
        ],
        "returns": "Promise<Devices>",
        "tags": [
          {
            "name": "param",
            "text": "devices The devices to scan for"
          },
          {
            "name": "returns",
            "text": "The new list of devices"
          }
        ],
        "docs": "Set the list of devices to scan for",
        "complexTypes": [
          "Devices",
          "AddDevicesOptions"
        ],
        "slug": "setdevices"
      },
      {
        "name": "clearDevices",
        "signature": "() => Promise<Devices>",
        "parameters": [],
        "returns": "Promise<Devices>",
        "tags": [
          {
            "name": "returns",
            "text": "The list of devices"
          }
        ],
        "docs": "Clear the list of devices to scan for",
        "complexTypes": [
          "Devices"
        ],
        "slug": "cleardevices"
      },
      {
        "name": "startForegroundService",
        "signature": "() => Promise<StartStopResult>",
        "parameters": [],
        "returns": "Promise<StartStopResult>",
        "tags": [
          {
            "name": "returns",
            "text": "The result of starting the background scanner"
          }
        ],
        "docs": "Start the background scanner",
        "complexTypes": [
          "StartStopResult"
        ],
        "slug": "startforegroundservice"
      },
      {
        "name": "stopForegroundService",
        "signature": "() => Promise<StartStopResult>",
        "parameters": [],
        "returns": "Promise<StartStopResult>",
        "tags": [],
        "docs": "Stop the background scanner",
        "complexTypes": [
          "StartStopResult"
        ],
        "slug": "stopforegroundservice"
      },
      {
        "name": "isRunning",
        "signature": "() => Promise<RunningResult>",
        "parameters": [],
        "returns": "Promise<RunningResult>",
        "tags": [
          {
            "name": "returns",
            "text": "The result of whether the background scanner is running"
          }
        ],
        "docs": "Is the background scanner running",
        "complexTypes": [
          "RunningResult"
        ],
        "slug": "isrunning"
      },
      {
        "name": "didUserStop",
        "signature": "() => Promise<UserStoppedResult>",
        "parameters": [],
        "returns": "Promise<UserStoppedResult>",
        "tags": [
          {
            "name": "returns",
            "text": "The result of whether the user stopped the background scanner"
          }
        ],
        "docs": "Did the user stop the background scanner from the notification",
        "complexTypes": [
          "UserStoppedResult"
        ],
        "slug": "diduserstop"
      },
      {
        "name": "getActiveDevice",
        "signature": "() => Promise<{ device: Device | null; }>",
        "parameters": [],
        "returns": "Promise<{ device: Device | null; }>",
        "tags": [
          {
            "name": "returns",
            "text": "The active device"
          }
        ],
        "docs": "Get the active Device",
        "complexTypes": [
          "Device"
        ],
        "slug": "getactivedevice"
      },
      {
        "name": "setActiveDevice",
        "signature": "(device: Device | null) => Promise<void>",
        "parameters": [
          {
            "name": "device",
            "docs": "The device to set as active",
            "type": "Device | null"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "param",
            "text": "device The device to set as active"
          },
          {
            "name": "returns",
            "text": "A promise that resolves when the device is set as active"
          }
        ],
        "docs": "Set a device as active",
        "complexTypes": [
          "Device"
        ],
        "slug": "setactivedevice"
      },
      {
        "name": "getConfig",
        "signature": "() => Promise<Config>",
        "parameters": [],
        "returns": "Promise<Config>",
        "tags": [
          {
            "name": "returns",
            "text": "The scanner configuration"
          }
        ],
        "docs": "Get the scanner configuration",
        "complexTypes": [
          "Config"
        ],
        "slug": "getconfig"
      },
      {
        "name": "setConfig",
        "signature": "(options: SetConfigOptions) => Promise<Config>",
        "parameters": [
          {
            "name": "options",
            "docs": "The options to set the scanner configuration",
            "type": "SetConfigOptions"
          }
        ],
        "returns": "Promise<Config>",
        "tags": [
          {
            "name": "param",
            "text": "options The options to set the scanner configuration"
          },
          {
            "name": "returns",
            "text": "The new scanner configuration"
          }
        ],
        "docs": "Set the scanner configuration",
        "complexTypes": [
          "Config",
          "SetConfigOptions"
        ],
        "slug": "setconfig"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'devicesChanged', event: DevicesChangedListener) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'devicesChanged'"
          },
          {
            "name": "event",
            "docs": "The listener function to call when the list of devices changes",
            "type": "DevicesChangedListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "param",
            "text": "event The listener function to call when the list of devices changes"
          },
          {
            "name": "returns",
            "text": "A handle to remove the listener"
          }
        ],
        "docs": "Add a listener for when the list of devices changes",
        "complexTypes": [
          "PluginListenerHandle",
          "DevicesChangedListener"
        ],
        "slug": "addlistenerdeviceschanged-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'closeDevicesChanged', event: DevicesChangedListener) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'closeDevicesChanged'"
          },
          {
            "name": "event",
            "docs": "The listener function to call when the list of close devices changes",
            "type": "DevicesChangedListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "param",
            "text": "event The listener function to call when the list of close devices changes"
          },
          {
            "name": "returns",
            "text": "A handle to remove the listener"
          }
        ],
        "docs": "Add a listener for when the list of close devices changes\n\nThis list only includes devices that are within the configured RSSI threshold.",
        "complexTypes": [
          "PluginListenerHandle",
          "DevicesChangedListener"
        ],
        "slug": "addlistenerclosedeviceschanged-"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PermissionStatus",
      "slug": "permissionstatus",
      "docs": "The permission state\n\nThe permission state is a string that can be one of the following:\n- 'granted': The permission is granted\n- 'denied': The permission is denied\n- 'prompt': The permission is prompt\n- 'unavailable': The permission is unavailable",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "bluetooth",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "PermissionState"
          ],
          "type": "PermissionState"
        },
        {
          "name": "notifications",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "PermissionState"
          ],
          "type": "PermissionState"
        }
      ]
    },
    {
      "name": "Devices",
      "slug": "devices",
      "docs": "The list of devices",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "devices",
          "tags": [],
          "docs": "The list of devices",
          "complexTypes": [
            "Device"
          ],
          "type": "Device[]"
        }
      ]
    },
    {
      "name": "Device",
      "slug": "device",
      "docs": "A device",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "serial",
          "tags": [],
          "docs": "The serial of the device",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "name",
          "tags": [],
          "docs": "The display name of the device",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "rssi",
          "tags": [],
          "docs": "The RSSI of the device\n\n-127 = device is not in range",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "txPower",
          "tags": [],
          "docs": "The TX power of the device\n\n-127 = unknown TX power",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "lastUpdated",
          "tags": [],
          "docs": "The last time the device was updated\n\nin milliseconds since epoch",
          "complexTypes": [],
          "type": "number"
        }
      ]
    },
    {
      "name": "AddDevicesOptions",
      "slug": "adddevicesoptions",
      "docs": "The options to add multiple devices",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "devices",
          "tags": [],
          "docs": "The devices to add to the list of devices to scan for",
          "complexTypes": [
            "AddDeviceOptions"
          ],
          "type": "AddDeviceOptions[]"
        }
      ]
    },
    {
      "name": "AddDeviceOptions",
      "slug": "adddeviceoptions",
      "docs": "The options to add a device\n\nOnly requires the serial and name of the device",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "serial",
          "tags": [],
          "docs": "The serial of the device",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "name",
          "tags": [],
          "docs": "The display name of the device",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "StartStopResult",
      "slug": "startstopresult",
      "docs": "The result of starting or stopping the background scanner",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "result",
          "tags": [],
          "docs": "The result of starting or stopping the background scanner",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "RunningResult",
      "slug": "runningresult",
      "docs": "The result of checking if the background scanner is running",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "running",
          "tags": [],
          "docs": "The result of checking if the background scanner is running",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "UserStoppedResult",
      "slug": "userstoppedresult",
      "docs": "The result of checking if the user stopped the background scanner",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "userStopped",
          "tags": [],
          "docs": "The result of checking if the user stopped the background scanner",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "Config",
      "slug": "config",
      "docs": "The current configuration of the scanner",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "config",
          "tags": [],
          "docs": "The result of getting the scanner configuration",
          "complexTypes": [
            "ScanConfig"
          ],
          "type": "ScanConfig"
        }
      ]
    },
    {
      "name": "ScanConfig",
      "slug": "scanconfig",
      "docs": "The scan configuration",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "mode",
          "tags": [
            {
              "text": "ScanMode *",
              "name": "see"
            },
            {
              "text": "ScanMode.LOW_POWER",
              "name": "default"
            }
          ],
          "docs": "The scan mode",
          "complexTypes": [
            "ScanMode"
          ],
          "type": "ScanMode"
        },
        {
          "name": "debug",
          "tags": [
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "The debug mode",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "deviceTimeout",
          "tags": [
            {
              "text": "30000",
              "name": "default"
            }
          ],
          "docs": "The device timeout in milliseconds\n\nIf a device has not had a scan result for this amount of time, it will be assumed to be out of range and will be pushed down the list",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "threshold",
          "tags": [
            {
              "text": "-100",
              "name": "default"
            }
          ],
          "docs": "The minimum RSSI to consider a device in range\n\nIf a device has an RSSI below this value, it will be considered out of range\n\nThe value is clamped to the range of -10 to -100.",
          "complexTypes": [],
          "type": "number"
        }
      ]
    },
    {
      "name": "SetConfigOptions",
      "slug": "setconfigoptions",
      "docs": "The options to set the configuration",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "config",
          "tags": [],
          "docs": "The configuration to set",
          "complexTypes": [
            "Partial",
            "ScanConfig"
          ],
          "type": "Partial<ScanConfig>"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "ScanMode",
      "slug": "scanmode",
      "members": [
        {
          "name": "OPPORTUNISTIC",
          "value": "-1",
          "tags": [],
          "docs": "A special Bluetooth LE scan mode.\nApplications using this scan mode will passively listen for other scan results without starting BLE scans themselves."
        },
        {
          "name": "LOW_POWER",
          "value": "0",
          "tags": [],
          "docs": "Perform Bluetooth LE scan in low power mode.\nThis is the default scan mode as it consumes the least power."
        },
        {
          "name": "BALANCED",
          "value": "1",
          "tags": [],
          "docs": "Perform Bluetooth LE scan in balanced power mode.\nScan results are returned at a rate that provides a good trade-off between scan frequency and power consumption."
        },
        {
          "name": "LOW_LATENCY",
          "value": "2",
          "tags": [],
          "docs": "Scan for Bluetooth LE devices using a high duty cycle.\nIt's recommended to only use this mode when the application is running in the foreground."
        }
      ]
    }
  ],
  "typeAliases": [
    {
      "name": "PermissionState",
      "slug": "permissionstate",
      "docs": "",
      "types": [
        {
          "text": "'prompt'",
          "complexTypes": []
        },
        {
          "text": "'prompt-with-rationale'",
          "complexTypes": []
        },
        {
          "text": "'granted'",
          "complexTypes": []
        },
        {
          "text": "'denied'",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "Partial",
      "slug": "partial",
      "docs": "Make all properties in T optional",
      "types": [
        {
          "text": "{\r\n    [P in keyof T]?: T[P];\r\n}",
          "complexTypes": [
            "T",
            "P"
          ]
        }
      ]
    },
    {
      "name": "DevicesChangedListener",
      "slug": "deviceschangedlistener",
      "docs": "A listener that is called when the list of devices changes",
      "types": [
        {
          "text": "(devices: Devices): void",
          "complexTypes": [
            "Devices"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}