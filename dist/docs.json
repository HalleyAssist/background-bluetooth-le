{
  "api": {
    "name": "BackgroundBLEPlugin",
    "slug": "backgroundbleplugin",
    "docs": "The background BLE plugin",
    "tags": [],
    "methods": [
      {
        "name": "checkPermissions",
        "signature": "() => Promise<PermissionStatus>",
        "parameters": [],
        "returns": "Promise<PermissionStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PermissionStatus"
        ],
        "slug": "checkpermissions"
      },
      {
        "name": "requestPermissions",
        "signature": "() => Promise<PermissionStatus>",
        "parameters": [],
        "returns": "Promise<PermissionStatus>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PermissionStatus"
        ],
        "slug": "requestpermissions"
      },
      {
        "name": "initialise",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "param",
            "text": "options The options to initialise the background scanner"
          }
        ],
        "docs": "Initialise the background scanner",
        "complexTypes": [],
        "slug": "initialise"
      },
      {
        "name": "getDevices",
        "signature": "() => Promise<Result<'devices', Device[]>>",
        "parameters": [],
        "returns": "Promise<Result<'devices', Device[]>>",
        "tags": [],
        "docs": "Get the current list of devices",
        "complexTypes": [
          "Result",
          "Device"
        ],
        "slug": "getdevices"
      },
      {
        "name": "setDevices",
        "signature": "(options: AddDevicesOptions) => Promise<Result<'devices', Device[]>>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "AddDevicesOptions"
          }
        ],
        "returns": "Promise<Result<'devices', Device[]>>",
        "tags": [
          {
            "name": "param",
            "text": "devices The devices to scan for"
          },
          {
            "name": "returns",
            "text": "The new list of devices"
          },
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Set the list of devices to scan for",
        "complexTypes": [
          "Result",
          "Device",
          "AddDevicesOptions"
        ],
        "slug": "setdevices"
      },
      {
        "name": "clearDevices",
        "signature": "() => Promise<Result<'devices', Device[]>>",
        "parameters": [],
        "returns": "Promise<Result<'devices', Device[]>>",
        "tags": [
          {
            "name": "returns",
            "text": "The list of devices"
          }
        ],
        "docs": "Clear the list of devices to scan for",
        "complexTypes": [
          "Result",
          "Device"
        ],
        "slug": "cleardevices"
      },
      {
        "name": "startForegroundService",
        "signature": "() => Promise<Result<'result', string>>",
        "parameters": [],
        "returns": "Promise<Result<'result', string>>",
        "tags": [
          {
            "name": "returns",
            "text": "The result of starting the background scanner"
          }
        ],
        "docs": "Start the background scanner",
        "complexTypes": [
          "Result"
        ],
        "slug": "startforegroundservice"
      },
      {
        "name": "stopForegroundService",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Stop the background scanner",
        "complexTypes": [],
        "slug": "stopforegroundservice"
      },
      {
        "name": "isRunning",
        "signature": "() => Promise<Result<'running', boolean>>",
        "parameters": [],
        "returns": "Promise<Result<'running', boolean>>",
        "tags": [
          {
            "name": "returns",
            "text": "The result of whether the background scanner is running"
          }
        ],
        "docs": "Is the background scanner running",
        "complexTypes": [
          "Result"
        ],
        "slug": "isrunning"
      },
      {
        "name": "didUserStop",
        "signature": "() => Promise<Result<'userStopped', boolean>>",
        "parameters": [],
        "returns": "Promise<Result<'userStopped', boolean>>",
        "tags": [
          {
            "name": "returns",
            "text": "The result of whether the user stopped the background scanner"
          }
        ],
        "docs": "Did the user stop the background scanner from the notification",
        "complexTypes": [
          "Result"
        ],
        "slug": "diduserstop"
      },
      {
        "name": "getConfig",
        "signature": "() => Promise<Result<'config', ScanConfig>>",
        "parameters": [],
        "returns": "Promise<Result<'config', ScanConfig>>",
        "tags": [
          {
            "name": "returns",
            "text": "The scanner configuration"
          }
        ],
        "docs": "Get the scanner configuration",
        "complexTypes": [
          "Result",
          "ScanConfig"
        ],
        "slug": "getconfig"
      },
      {
        "name": "setConfig",
        "signature": "(options: SetConfigOptions) => Promise<Result<'config', ScanConfig>>",
        "parameters": [
          {
            "name": "options",
            "docs": "The options to set the scanner configuration",
            "type": "SetConfigOptions"
          }
        ],
        "returns": "Promise<Result<'config', ScanConfig>>",
        "tags": [
          {
            "name": "param",
            "text": "options The options to set the scanner configuration"
          },
          {
            "name": "returns",
            "text": "The new scanner configuration"
          }
        ],
        "docs": "Set the scanner configuration",
        "complexTypes": [
          "Result",
          "ScanConfig",
          "SetConfigOptions"
        ],
        "slug": "setconfig"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PermissionStatus",
      "slug": "permissionstatus",
      "docs": "The permission state\n\nThe permission state is a string that can be one of the following:\n- 'granted': The permission is granted\n- 'denied': The permission is denied\n- 'prompt': The permission is prompt\n- 'unavailable': The permission is unavailable",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "bluetooth",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "PermissionState"
          ],
          "type": "PermissionState"
        },
        {
          "name": "notifications",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "PermissionState"
          ],
          "type": "PermissionState"
        }
      ]
    },
    {
      "name": "Device",
      "slug": "device",
      "docs": "A device",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "serial",
          "tags": [],
          "docs": "The serial of the device",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "name",
          "tags": [],
          "docs": "The display name of the device",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "rssi",
          "tags": [],
          "docs": "The RSSI of the device\n\n0 = device is not in range",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "txPower",
          "tags": [],
          "docs": "The TX power of the device\n\n-127 = unknown TX power",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "lastUpdated",
          "tags": [],
          "docs": "The last time the device was updated\n\nin milliseconds since epoch",
          "complexTypes": [],
          "type": "number"
        }
      ]
    },
    {
      "name": "AddDevicesOptions",
      "slug": "adddevicesoptions",
      "docs": "The options to add multiple devices",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "devices",
          "tags": [],
          "docs": "The devices to add to the list of devices to scan for",
          "complexTypes": [
            "AddDeviceOptions"
          ],
          "type": "AddDeviceOptions[]"
        }
      ]
    },
    {
      "name": "AddDeviceOptions",
      "slug": "adddeviceoptions",
      "docs": "The options to add a device\n\nOnly requires the serial and name of the device",
      "tags": [
        {
          "text": "1.0.0",
          "name": "since"
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "serial",
          "tags": [],
          "docs": "The serial of the device",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "name",
          "tags": [],
          "docs": "The display name of the device",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "ScanConfig",
      "slug": "scanconfig",
      "docs": "The scan configuration",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "mode",
          "tags": [
            {
              "text": "ScanMode *",
              "name": "see"
            },
            {
              "text": "ScanMode.LOW_POWER",
              "name": "default"
            }
          ],
          "docs": "The scan mode",
          "complexTypes": [
            "ScanMode"
          ],
          "type": "ScanMode"
        },
        {
          "name": "debug",
          "tags": [
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "The debug mode",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "deviceTimeout",
          "tags": [
            {
              "text": "30000",
              "name": "default"
            }
          ],
          "docs": "The device timeout in milliseconds\n\nIf a device has not had a scan result for this amount of time, it will be assumed to be out of range and will be pushed down the list",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "threshold",
          "tags": [
            {
              "text": "-100",
              "name": "default"
            }
          ],
          "docs": "The minimum RSSI to consider a device in range\n\nIf a device has an RSSI below this value, it will be considered out of range\n\nThe value is clamped to the range of -10 to -100.",
          "complexTypes": [],
          "type": "number"
        }
      ]
    },
    {
      "name": "SetConfigOptions",
      "slug": "setconfigoptions",
      "docs": "The options to set the configuration",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "config",
          "tags": [],
          "docs": "The configuration to set",
          "complexTypes": [
            "Partial",
            "ScanConfig"
          ],
          "type": "Partial<ScanConfig>"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "ScanMode",
      "slug": "scanmode",
      "members": [
        {
          "name": "OPPORTUNISTIC",
          "value": "-1",
          "tags": [],
          "docs": "A special Bluetooth LE scan mode.\nApplications using this scan mode will passively listen for other scan results without starting BLE scans themselves."
        },
        {
          "name": "LOW_POWER",
          "value": "0",
          "tags": [],
          "docs": "Perform Bluetooth LE scan in low power mode.\nThis is the default scan mode as it consumes the least power."
        },
        {
          "name": "BALANCED",
          "value": "1",
          "tags": [],
          "docs": "Perform Bluetooth LE scan in balanced power mode.\nScan results are returned at a rate that provides a good trade-off between scan frequency and power consumption."
        },
        {
          "name": "LOW_LATENCY",
          "value": "2",
          "tags": [],
          "docs": "Scan for Bluetooth LE devices using a high duty cycle.\nIt's recommended to only use this mode when the application is running in the foreground."
        }
      ]
    }
  ],
  "typeAliases": [
    {
      "name": "PermissionState",
      "slug": "permissionstate",
      "docs": "",
      "types": [
        {
          "text": "'prompt'",
          "complexTypes": []
        },
        {
          "text": "'prompt-with-rationale'",
          "complexTypes": []
        },
        {
          "text": "'granted'",
          "complexTypes": []
        },
        {
          "text": "'denied'",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "Result",
      "slug": "result",
      "docs": "The result type is used to define the result of a function",
      "types": [
        {
          "text": "{\n  [key in Key]: T;\n}",
          "complexTypes": [
            "Key",
            "T"
          ]
        }
      ]
    },
    {
      "name": "Partial",
      "slug": "partial",
      "docs": "Make all properties in T optional",
      "types": [
        {
          "text": "{\r\n    [P in keyof T]?: T[P];\r\n}",
          "complexTypes": [
            "T",
            "P"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}